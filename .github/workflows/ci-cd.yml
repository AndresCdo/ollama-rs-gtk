name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpango1.0-dev
          sudo apt-get install -y libcairo2-dev
          sudo apt-get install -y libatk1.0-dev
          sudo apt-get install -y libgdk-pixbuf2.0-dev
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libsoup2.4-dev
          sudo apt-get install -y libjavascriptcoregtk-4.1-dev
          sudo apt-get install -y libwebkit2gtk-4.0-dev
          sudo apt-get install -y libgtksourceview-3.0-dev

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build project
        run: cargo build --release

      - name: Create release artifact
        run: |
          mkdir -p dist
          cp target/release/ollama-rs-gtk dist/ollama-rs-gtk  # Adjust the filename as needed
          tar -czvf dist/ollama-rs-gtk.tar.gz dist/ollama-rs-gtk

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Generate release notes
        run: cargo install cargo-release && cargo release notes -o release_notes.md

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ollama-rs-gtk.tar.gz
          asset_name: ollama-rs-gtk-${{ runner.os }}-${{ github.run_number }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload release notes
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_notes.md
          asset_name: release_notes.md
          asset_content_type: text/markdown